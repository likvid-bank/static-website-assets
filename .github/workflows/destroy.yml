name: Destroy Resources

on:
  workflow_dispatch:
    inputs:
      buildingBlockRun:
        description: "Building Block Run Object"
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup meshstack auth
        id: setup-meshstack-auth
        uses: meshcloud/actions-register-source@v0.1.0
        with:
          client_id: ${{ vars.BUILDINGBLOCK_API_CLIENT_ID }}
          key_secret: ${{ secrets.BUILDINGBLOCK_API_KEY_SECRET }}          
          steps: |
            [
              {
                "id": "delete-bucket-stack",
                "displayName": "Delete bucket"
              }
            ]

      - name: Setup aws auth
        uses: aws-actions/configure-aws-credentials@v4
        continue-on-error: true
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Delete bucket stack
        id: delete-bucket
        continue-on-error: true
        run: aws cloudformation delete-stack --stack-name "s3-${{ steps.setup-meshstack-auth.outputs.bucket_name }}"

      - name: Send status 
        if: ${{ steps.delete-bucket.outcome == 'success' || steps.delete-bucket.outcome == 'failure' }}
        uses: meshcloud/actions-send-status@main
        with:
          step_id: "delete-bucket"
          status: ${{ steps.delete-bucket.outcome == 'success' && 'SUCCEEDED' || 'FAILED' }} 
          user_message: ${{ steps.delete-bucket.outcome == 'success' && 'Successful delete bucket.' || 'Failed delete bucket.' }}
          system_message:  ${{ steps.delete-bucket.outcome == 'success' && 'Successful delete bucket.' || 'Failed to delete bucket stack, please check the GitHub actions log for more details.' }}

      - name: Send final status
        if: ${{ always() }}
        uses: meshcloud/actions-send-status@main
        with:
          final_status: ${{ job.status == 'success' && 'SUCCEEDED' || 'FAILED' }}
          summary: ${{ job.status == 'success' && 'Bucket Deployment successful' || 'Bucket Deployment failed' }}
